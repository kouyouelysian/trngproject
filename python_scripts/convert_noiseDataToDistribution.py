'''
	TRNG PROJECT - NOISE DATA TO DISTRIBUTION GRAPH CONVERTER
	this is a utility file for other scripts to use and it has no main run.
	it expects a .txt file with one byte value written down as a decimal number per line
	these are generated by trng_getNoiseData and prng_getNoiseData

	the "tiers" setting sets the number of groups the values will be grouped into
	256 (default) tiers means one tier per value, so the graph would show
	the result for every value
	a setting of 16 would group values into 16 ranges of (256/16) values
	(0...15, 16...31, 32...47, ... ...)
	this is sometimes needed to see if the general graph direction is flat or not
'''
def convert(fname, tiers=256, limit=1000000):
	# attempt to open the noise data file
	try:
		f = open(fname, "r")
	except Exception as e:
		raise ValueError("no target file!")
	data_unnorm = []
	data = []
	# make the unnormalized output array
	for x in range(tiers):
		data_unnorm.append(0)
	# parse the file
	lines_read = 0
	for i in f:
		data_unnorm[int(int(i)/(256/tiers))] += 1
		lines_read += 1
		if (lines_read == limit):
			print("hit user-set value number limit for", fname)
			break
	# make the normalized [0:1] range output array
	for t in data_unnorm:
		data.append(t/max(data_unnorm))
	return data
	